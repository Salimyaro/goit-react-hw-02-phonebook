{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["ContactForm","state","name","number","handleChange","currentTarget","value","setState","handleSubmit","event","preventDefault","props","onSubmit","reset","className","s","form","this","title","input","type","onChange","button","Component","Contacts","contacts","onDeleteContact","list","map","id","listItem","num","onClick","Filter","App","filter","handleFilterChange","formSubmitHandler","data","contact","toLocaleLowerCase","includes","alert","shortId","generate","prevState","getVisibleContacts","normalizedFilter","deleteContact","contactId","visibleContacts","ContactList","ReactDOM","render","StrictMode","document","querySelector","module","exports"],"mappings":"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","file":"static/js/main.1f3d9cf7.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = ({ currentTarget: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={s.form} onSubmit={this.handleSubmit}>\r\n        <label className={s.title}>\r\n          Name\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={s.title}>\r\n          Number\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button className={s.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n// import PropTypes from 'prop-types'\r\n\r\nclass Contacts extends Component {\r\n  static propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.string,\r\n        name: PropTypes.string,\r\n        number: PropTypes.string,\r\n      }),\r\n    ).isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n  };\r\n  render() {\r\n    const { contacts, onDeleteContact } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <ul className={s.list}>\r\n          {contacts.map(({ id, name, number }) => {\r\n            return (\r\n              <li key={id} className={s.listItem}>\r\n                <span className={s.name}>{name}:</span>\r\n                <span className={s.num}>{number}</span>\r\n                <button\r\n                  className={s.button}\r\n                  onClick={() => onDeleteContact(id)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Filter extends Component {\r\n  static propTypes = {\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n  };\r\n  handleChange = ({ currentTarget: { value } }) => {\r\n    this.props.onChange(value);\r\n  };\r\n\r\n  render() {\r\n    const { value } = this.props;\r\n    return <input type=\"text\" value={value} onChange={this.handleChange} />;\r\n  }\r\n}\r\n\r\nexport default Filter;\r\n","import { Component, Fragment } from 'react';\r\nimport shortId from 'shortid';\r\nimport ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContactList';\r\nimport Filter from './components/Filter';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  handleFilterChange = value => {\r\n    this.setState({ filter: value });\r\n  };\r\n\r\n  formSubmitHandler = data => {\r\n    const allNames = this.state.contacts.map(contact =>\r\n      contact.name.toLocaleLowerCase(),\r\n    );\r\n    if (allNames.includes(data.name.toLocaleLowerCase())) {\r\n      alert(`${data.name} is already in contacts.`);\r\n      return;\r\n    }\r\n    const contact = {\r\n      id: shortId.generate(),\r\n      name: data.name,\r\n      number: data.number,\r\n    };\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: [...prevState.contacts, contact],\r\n      };\r\n    });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const normalizedFilter = this.state.filter.toLocaleLowerCase();\r\n\r\n    return this.state.contacts.filter(contact =>\r\n      contact.name.toLocaleLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const visibleContacts = this.getVisibleContacts();\r\n    return (\r\n      <Fragment>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onSubmit={this.formSubmitHandler} />\r\n        <h2>Contacts</h2>\r\n        <Filter value={this.state.filter} onChange={this.handleFilterChange} />\r\n        <ContactList\r\n          contacts={visibleContacts}\r\n          onDeleteContact={this.deleteContact}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\nimport React from 'react';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.querySelector('#root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1t9tS\",\"title\":\"ContactForm_title__1eqJq\",\"input\":\"ContactForm_input__3k3-0\",\"button\":\"ContactForm_button__2e6WU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__32U0v\",\"listItem\":\"ContactList_listItem__1EnGg\",\"name\":\"ContactList_name__2vrSV\",\"num\":\"ContactList_num__1YCZF\",\"button\":\"ContactList_button__2XQEq\"};"],"sourceRoot":""}